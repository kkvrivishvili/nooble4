version: '3.8'

services:
  # Redis
  redis:
    image: redis:7-alpine
    container_name: nooble_redis
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - nooble_network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: nooble_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nooble
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nooble_network

  # Qdrant
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: nooble_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - nooble_network

  # ==================== SERVICES ====================
  
  # Query Service
  query_service:
    build:
      context: .
      dockerfile: ./query_service/Dockerfile
    container_name: query_service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SERVICE_NAME=query_service
      - SERVICE_VERSION=1.0.0
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=redis123
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/nooble
      - QDRANT_URL=http://qdrant:6333
      - EMBEDDING_SERVICE_URL=http://embedding_service:8006
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - nooble_network

  # Ingestion Service
  ingestion_service:
    build:
      context: .
      dockerfile: ./ingestion_service/Dockerfile
    container_name: ingestion_service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SERVICE_NAME=ingestion_service
      - SERVICE_VERSION=1.0.0
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=redis123
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/nooble
      - QDRANT_URL=http://qdrant:6333
      - PORT=8002
    ports:
      - "8002:8002"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - nooble_network

  # Conversation Service
  conversation_service:
    build:
      context: .
      dockerfile: ./conversation_service/Dockerfile
    container_name: conversation_service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SERVICE_NAME=conversation_service
      - SERVICE_VERSION=1.0.0
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=redis123
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/nooble
      - PORT=8004
    ports:
      - "8004:8004"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nooble_network

  # Agent Execution Service
  agent_execution_service:
    build:
      context: .
      dockerfile: ./agent_execution_service/Dockerfile
    container_name: agent_execution_service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SERVICE_NAME=agent_execution_service
      - SERVICE_VERSION=1.0.0
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=redis123
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/nooble
      - QDRANT_URL=http://qdrant:6333
      - PORT=8005
    ports:
      - "8005:8005"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      query_service:
        condition: service_started
      conversation_service:
        condition: service_started
    networks:
      - nooble_network

  # Embedding Service
  embedding_service:
    build:
      context: .
      dockerfile: ./embedding_service/Dockerfile
    container_name: embedding_service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SERVICE_NAME=embedding_service
      - SERVICE_VERSION=1.0.0
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=redis123
      - QDRANT_URL=http://qdrant:6333
      - PORT=8006
    ports:
      - "8006:8006"
    depends_on:
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - nooble_network

# Volumes for persistent data
volumes:
  redis_data:
  postgres_data:
  qdrant_data:

# Network for all services
networks:
  nooble_network:
    driver: bridge
