version: '3.8'

services:
  # ==================== INFRASTRUCTURE ====================

  redis:
    image: redis:7-alpine
    container_name: nooble4-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - nooble_network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: nooble4-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nooble}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - nooble_network
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: nooble4-qdrant
    ports:
      - "${QDRANT_HTTP_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spinner", "http://localhost:6333/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - nooble_network
    restart: unless-stopped

  # ==================== MICROSERVICES ====================

  query_service:
    build:
      context: .
      dockerfile: ./query_service/Dockerfile
    container_name: nooble4-query-service
    networks:
      - nooble_network
    ports:
      - "${QUERY_SERVICE_PORT}:8000"
    depends_on:
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME=query_service
      - LOG_LEVEL=${LOG_LEVEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  ingestion_service:
    build:
      context: .
      dockerfile: ./ingestion_service/Dockerfile
    container_name: nooble4-ingestion-service
    networks:
      - nooble_network
    ports:
      - "${INGESTION_SERVICE_PORT}:8002"
    depends_on:
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME=ingestion_service
      - LOG_LEVEL=${LOG_LEVEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  embedding_service:
    build:
      context: .
      dockerfile: ./embedding_service/Dockerfile
    container_name: nooble4-embedding-service
    networks:
      - nooble_network
    ports:
      - "${EMBEDDING_SERVICE_PORT}:8006"
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME=embedding_service
      - LOG_LEVEL=${LOG_LEVEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  agent_execution_service:
    build:
      context: .
      dockerfile: ./agent_execution_service/Dockerfile
    container_name: nooble4-agent-execution-service
    networks:
      - nooble_network
    ports:
      - "${AGENT_EXECUTION_PORT}:8005"
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME=agent_execution_service
      - LOG_LEVEL=${LOG_LEVEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

# Volumes for persistent data
volumes:
  redis_data:
  postgres_data:
  qdrant_data:

# Network for all services
networks:
  nooble_network:
    driver: bridge
