# Qdrant Configuration
# Environment variables take precedence over these values

# Server configuration
service:
  host: 0.0.0.0
  # Using direct values since Qdrant doesn't support env var interpolation in YAML for numbers
  http_port: 6333
  grpc_port: 6334
  max_request_size_mb: 32
  enable_cors: true

# Logging configuration
log_level: INFO

# Storage configuration
storage:
  # Storage path is set via environment variable
  storage_path: ${QDRANT_STORAGE_PATH:-/qdrant/storage}
  snapshots_path: ${QDRANT_STORAGE_PATH:-/qdrant/storage}/snapshots
  
  # Store payload on disk to save RAM (slower but uses less memory)
  on_disk_payload: true
  
  # WAL configuration
  wal:
    wal_capacity_mb: 32
    wal_segments_ahead: 0
    recover_virtual_consistency: ${QDRANT_ALLOW_RECOVERY:-true}

# Performance tuning
performance:
  # Auto-detect number of threads (0 = auto)
  max_search_threads: 0
  max_optimization_threads: 2

# Optimizer configuration
optimizers:
  deleted_threshold: 0.2
  vacuum_min_vector_number: 1000
  default_segment_number: 2
  flush_interval_sec: 5
  max_optimization_threads: 2
  
  # HNSW index configuration
  hnsw_index:
    m: 16
    ef_construct: 100
    full_scan_threshold_kb: 10000
    max_indexing_threads: 0
    on_disk: false

# Default collection configuration
collection:
  vectors:
    # Whether vectors should be stored on disk (saves RAM but slower)
    on_disk: null
  
  # Default quantization configuration
  quantization:
    # Options: "scalar", "product", or null to disable
    quantization: null
  # Habilitar HTTPS. Requiere configuración de TLS.
  # enable_tls: false
  # Clave de API para acceso. Si se establece, todas las peticiones deben incluirla.
  # Se recomienda usar junto con TLS.
  # api_key: "your-secret-api-key"

# Configuración de clúster. Habilitar para modo distribuido.
cluster:
  enabled: false
  # p2p:
  #   port: 6335
  #   enable_tls: false
  # consensus:
  #   tick_period_ms: 100

# Deshabilitar telemetría anónima.
telemetry_disabled: false

# Configuración de TLS. Requerida si service.enable_tls o cluster.p2p.enable_tls es true.
# tls:
#   cert: ./tls/cert.pem
#   key: ./tls/key.pem
#   ca_cert: ./tls/cacert.pem
